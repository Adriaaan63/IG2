material materialPerla
{
	technique
	{
		pass
		{
			ambient 0.3 0.8 0.3

			texture_unit
			{
				texture tusk.jpg				
			}
		}
	}
}

material materialSuelo
{
	technique
	{
		pass
		{
			ambient 0.3 0.8 0.3

			texture_unit
			{
				texture grass.PNG				
			}
		}
	}
}

material materialMuro
{
	technique
	{
		pass
		{
			ambient 0.3 0.8 0.3

			texture_unit
			{
				texture floor_diffuse.PNG				
			}
		}
	}
}

material materialSuelo2
{
	technique
	{
		pass
		{
			ambient 0.3 0.8 0.3

			texture_unit
			{
				texture spotlight_image.png				
			}
		}
	}
}

material materialAspasEnemigo
{
	technique
	{
		pass
		{
			ambient 0.3 0.8 0.3

			texture_unit
			{
				texture BumpyMetal.jpg				
			}
		}
	}
}

material smoke
{
	technique{
		pass{
			lighting off
			scene_blend alpha_blend
			depth_write off
			diffuse vertexcolour
			texture_unit{
				texture smoke.png
				tex_address_mode clamp
			}
		}
	}
}

material fire
{
	technique{
		pass{
			lighting off
			scene_blend alpha_blend
			depth_write off
			diffuse vertexcolour
			texture_unit{
				texture smokecolors.png
				tex_address_mode clamp
			}
		}
	}
}

material example/sky{
	technique{
		pass{
			ambient 0.5 0.5 0.5
			diffuse 1.0 1.0 1.0
			lighting off
			texture_unit{
				texture spacesky.jpg
				colour_op modulate 
				scroll_anim 0.1 0.1
			}
	
			texture_unit{
				texture lightMap.jpg
				colour_op add
				scroll_anim 0.1 0.1
			}
		}
	}
}
material example/textureTest{ 
	technique { 
		pass { 
			texture_unit { 
				texture floor_diffuse.PNG 
				colour_op modulate 
			} 
			texture_unit { 
				texture flare.png 
				colour_op modulate 
			} 
		}
	}
}


vertex_program SpaceSkyZoomLightVS glsl{
	source SpaceSkyZoomLightVS.glsl
	default_params{
		param_named_auto modelViewProjMat worldviewproj_matrix
		param_named_auto sintime sintime_0_2pi 15;
	}
}

fragment_program SpaceSkyZoomLightFS glsl{
	source SpaceSkyZoomLightFS.glsl
	default_params{
		param_named texturaL int 0
		param_named texturaM int 1
		param_named BF float 0.5
		param_named minL float 0.0
		param_named maxL float 1.0
	}
}

material practica2/spaceSkyZoomLightShader {
    technique {
        pass {
            

            vertex_program_ref SpaceSkyZoomLightVS {
            }

            fragment_program_ref SpaceSkyZoomLightFS {
            }

            texture_unit {
				texture spacesky.jpg 2d
                tex_address_mode clamp
            }

            texture_unit {
				texture lightMap.jpg 2d
                tex_address_mode clamp
            }
        }
    }
}

vertex_program SphereHolesVS glsl
{
	source SphereHolesVS.glsl
	default_params
	{
	param_named_auto modelViewProjMat worldviewproj_matrix
	}
}
fragment_program SphereHolesFS glsl
{
	source SphereHolesFS.glsl
	default_params
	{ 
		param_named texturaL int 0
		param_named texturaM int 1
		param_named texturaN int 2
		param_named intLuzAmb float 1.0
		param_named_auto flipping render_target_flipping
	}
}

material practica2/SphereHoles
{
    technique
    {
        pass
        {
			lighting off

			vertex_program_ref SphereHolesVS {
            }

            fragment_program_ref SphereHolesFS {
            }
			
            cull_hardware none
            cull_software none

            
            texture_unit {
				texture corrosion.jpg 2d
				tex_address_mode clamp
            }
            texture_unit {
                texture BumpyMetal.jpg 2d
				tex_address_mode clamp
            }
            texture_unit {
                texture Material_dirt.jpg 2d
				tex_address_mode clamp
            }
        }
    }
}

vertex_program wavesShaderVS glsl
{
	source wavesShaderVS.glsl
	default_params
	{
	param_named_auto modelViewProjMat worldviewproj_matrix
	param_named_auto time sintime_0_2pi 15;
	param_named centro float4 0.0 0.0 0.0 1.0
	}
}
fragment_program wavesShaderFS glsl
{
	source wavesShaderFS.glsl
	default_params
	{ 
		param_named texturaL int 0
	}
}
material practica2/wavesShader
{
    technique
    {
        pass
        {
			lighting off

			vertex_program_ref wavesShaderVS {
            }

            fragment_program_ref wavesShaderFS {
            }

            
            texture_unit {
				texture Water02.jpg 2d
            }
           
        }
    }
}



